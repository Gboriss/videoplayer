{"version":3,"sources":["player.js"],"names":["video","document","querySelector","progress","progressFilled","toggle","skippers","querySelectorAll","time","load","ranges","imgCorgi","getElementById","togglePlay","playState","paused","updateButton","togglePlayBtn","innerHTML","rangeUpdate","name","value","videoTime","duration","toFixed","f","currentTime","minutes","Math","floor","seconds","test","innerText","loadTime","totalTime","progressUpdate","style","flexBasis","scrub","e","offsetX","offsetWidth","skip","parseFloat","dataset","addEventListener","keyCode","forEach","button","display","play","range","mousedown"],"mappings":"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","file":"player.2f7907da.js","sourceRoot":"..","sourcesContent":["\r\nconst video = document.querySelector('.player-video')\r\nconst progress = document.querySelector('.progress')\r\nconst progressFilled = document.querySelector('.filled-progress')\r\nconst toggle = document.querySelector('.toggle-play')\r\nconst skippers = document.querySelectorAll('.player-btn')\r\n\r\nconst time = document.querySelector('.time')\r\nconst load = document.querySelector('.load') \r\nconst ranges = document.querySelectorAll('.player-slider')\r\nconst imgCorgi = document.getElementById('imgCorgi')\r\n\r\n\r\nfunction togglePlay() {\r\n  const playState = video.paused ? 'play' : 'pause'\r\n  video[playState]()\r\n}\r\n\r\nfunction updateButton() {\r\n    const togglePlayBtn = document.querySelector('.toggle-play')\r\n    this.paused \r\n        ?\r\n        togglePlayBtn.innerHTML = `<svg class=\"\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><title>play</title><path d=\"M3 2l10 6-10 6z\"></path></svg>`  \r\n        :\r\n        togglePlayBtn.innerHTML = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><title>pause</title><path d=\"M2 2h5v12H2zm7 0h5v12H9z\"></path></svg>`\r\n}\r\n\r\n\r\nfunction rangeUpdate() {\r\n  video[this.name] = this.value\r\n}\r\n\r\nfunction videoTime() {\r\n    let duration = video.duration.toFixed(1)\r\n\r\n    let f = duration - video.currentTime\r\n    let minutes = Math.floor( (f / 60) % 60 )\r\n    let seconds = Math.floor(f % 60 )\r\n    let test = (minutes > 0 ? minutes : '0')  + ' : ' + (seconds > 0 ? seconds : '0')\r\n    load.innerText = test\r\n}\r\n\r\nfunction loadTime() {\r\n    let duration = video.duration.toFixed(1)\r\n    let minutes = Math.floor( (duration / 60) % 60 )\r\n    let seconds = Math.floor(duration % 60 )\r\n    let totalTime = minutes + ' : ' + seconds\r\n\r\n    time.innerText = totalTime\r\n}\r\n\r\nfunction progressUpdate() {\r\n    progressFilled.style.flexBasis = (video.currentTime / video.duration * 100) + '%'\r\n    // progressFilled.style.flexBasis = `${percent}%`\r\n}\r\n\r\nfunction scrub(e) {\r\n    video.currentTime = (e.offsetX / progress.offsetWidth) * video.duration\r\n}\r\n\r\nfunction skip() {\r\n    video.currentTime += parseFloat(this.dataset.skip)\r\n  \r\n  }\r\n\r\n// Event listeners\r\ndocument.addEventListener('keydown', function(e) {\r\n  e.keyCode === 32 && togglePlay()\r\n})\r\n\r\n\r\nvideo.addEventListener('click', togglePlay)\r\nvideo.addEventListener('play', updateButton)\r\nvideo.addEventListener('pause', updateButton)\r\nvideo.addEventListener('timeupdate', progressUpdate)\r\nvideo.addEventListener('timeupdate', videoTime)\r\nvideo.addEventListener('loadedmetadata', loadTime)\r\n// secondsUpdated\r\n// loadedmetadata\r\n\r\ntoggle.addEventListener('click', togglePlay)\r\nskippers.forEach(button => button.addEventListener('click', skip))\r\nimgCorgi.addEventListener('click', () => {\r\n  imgCorgi.style.display = 'none'\r\n  video.play()\r\n})\r\n\r\nranges.forEach(range => range.addEventListener('change', rangeUpdate))\r\nranges.forEach(range => range.addEventListener('mousemove', rangeUpdate))\r\n\r\nlet mousedown = false\r\nprogress.addEventListener('click', scrub)\r\nprogress.addEventListener('mousemove', (e) => mousedown && scrub(e))\r\nprogress.addEventListener('mousedown', () => mousedown = true)\r\nprogress.addEventListener('mouseup', () => mousedown = false)"]}