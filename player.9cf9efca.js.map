{"version":3,"sources":["player.js"],"names":["video","document","querySelector","progress","progressFilled","toggle","skippers","querySelectorAll","time","load","ranges","togglePlay","playState","paused","updateButton","togglePlayBtn","innerHTML","rangeUpdate","name","value","videoTime","duration","f","toFixed","currentTime","minutes","Math","floor","seconds","test","innerText","loadTime","totalTime","progressUpdate","style","flexBasis","scrub","e","offsetX","offsetWidth","skip","parseFloat","dataset","addEventListener","keyCode","forEach","button","range","mousedown"],"mappings":";AACA,IAAMA,EAAQC,SAASC,cAAc,iBAC/BC,EAAWF,SAASC,cAAc,aAClCE,EAAiBH,SAASC,cAAc,oBACxCG,EAASJ,SAASC,cAAc,gBAChCI,EAAWL,SAASM,iBAAiB,eAErCC,EAAOP,SAASC,cAAc,SAC9BO,EAAOR,SAASC,cAAc,SAC9BQ,EAAST,SAASM,iBAAiB,kBAGzC,SAASI,IACDC,IAAAA,EAAYZ,EAAMa,OAAS,OAAS,QAC1Cb,EAAMY,KAGR,SAASE,IACCC,IAAAA,EAAgBd,SAASC,cAAc,gBACxCW,KAAAA,OAEDE,EAAcC,UAFlB,sHAIID,EAAcC,UAJlB,uHAQJ,SAASC,IACPjB,EAAM,KAAKkB,MAAQ,KAAKC,MAG1B,SAASC,IACDC,IAEAC,EAFWtB,EAAMqB,SAASE,QAAQ,GAEnBvB,EAAMwB,YACrBC,EAAUC,KAAKC,MAAQL,EAAI,GAAM,IACjCM,EAAUF,KAAKC,MAAML,EAAI,IACzBO,GAAQJ,EAAU,EAAIA,EAAU,KAAQ,OAASG,EAAU,EAAIA,EAAU,KAC7EnB,EAAKqB,UAAYD,EAGrB,SAASE,IACDV,IAAAA,EAAWrB,EAAMqB,SAASE,QAAQ,GAGlCS,EAFUN,KAAKC,MAAQN,EAAW,GAAM,IAElB,MADZK,KAAKC,MAAMN,EAAW,IAGpCb,EAAKsB,UAAYE,EAGrB,SAASC,IACL7B,EAAe8B,MAAMC,UAAanC,EAAMwB,YAAcxB,EAAMqB,SAAW,IAAO,IAIlF,SAASe,EAAMC,GACXrC,EAAMwB,YAAea,EAAEC,QAAUnC,EAASoC,YAAevC,EAAMqB,SAGnE,SAASmB,IACLxC,EAAMwB,aAAeiB,WAAW,KAAKC,QAAQF,MAKjDvC,SAAS0C,iBAAiB,UAAW,SAASN,GAC9B,KAAdA,EAAEO,SAAkBjC,MAItBX,EAAM2C,iBAAiB,QAAShC,GAChCX,EAAM2C,iBAAiB,OAAQ7B,GAC/Bd,EAAM2C,iBAAiB,QAAS7B,GAChCd,EAAM2C,iBAAiB,aAAcV,GACrCjC,EAAM2C,iBAAiB,aAAcvB,GACrCpB,EAAM2C,iBAAiB,iBAAkBZ,GAIzC1B,EAAOsC,iBAAiB,QAAShC,GACjCL,EAASuC,QAAQ,SAAAC,GAAUA,OAAAA,EAAOH,iBAAiB,QAASH,KAC5D9B,EAAOmC,QAAQ,SAAAE,GAASA,OAAAA,EAAMJ,iBAAiB,SAAU1B,KACzDP,EAAOmC,QAAQ,SAAAE,GAASA,OAAAA,EAAMJ,iBAAiB,YAAa1B,KAE5D,IAAI+B,GAAY,EAChB7C,EAASwC,iBAAiB,QAASP,GACnCjC,EAASwC,iBAAiB,YAAa,SAACN,GAAMW,OAAAA,GAAaZ,EAAMC,KACjElC,EAASwC,iBAAiB,YAAa,WAAMK,OAAAA,GAAY,IACzD7C,EAASwC,iBAAiB,UAAW,WAAMK,OAAAA,GAAY","file":"player.9cf9efca.js","sourceRoot":"..","sourcesContent":["\r\nconst video = document.querySelector('.player-video')\r\nconst progress = document.querySelector('.progress')\r\nconst progressFilled = document.querySelector('.filled-progress')\r\nconst toggle = document.querySelector('.toggle-play')\r\nconst skippers = document.querySelectorAll('.player-btn')\r\n\r\nconst time = document.querySelector('.time')\r\nconst load = document.querySelector('.load') \r\nconst ranges = document.querySelectorAll('.player-slider')\r\n\r\n\r\nfunction togglePlay() {\r\n  const playState = video.paused ? 'play' : 'pause'\r\n  video[playState]()\r\n}\r\n\r\nfunction updateButton() {\r\n    const togglePlayBtn = document.querySelector('.toggle-play')\r\n    this.paused \r\n        ?\r\n        togglePlayBtn.innerHTML = `<svg class=\"\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><title>play</title><path d=\"M3 2l10 6-10 6z\"></path></svg>`  \r\n        :\r\n        togglePlayBtn.innerHTML = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"><title>pause</title><path d=\"M2 2h5v12H2zm7 0h5v12H9z\"></path></svg>`\r\n}\r\n\r\n\r\nfunction rangeUpdate() {\r\n  video[this.name] = this.value\r\n}\r\n\r\nfunction videoTime() {\r\n    let duration = video.duration.toFixed(1)\r\n\r\n    let f = duration - video.currentTime\r\n    let minutes = Math.floor( (f / 60) % 60 )\r\n    let seconds = Math.floor(f % 60 )\r\n    let test = (minutes > 0 ? minutes : '0')  + ' : ' + (seconds > 0 ? seconds : '0')\r\n    load.innerText = test\r\n}\r\n\r\nfunction loadTime() {\r\n    let duration = video.duration.toFixed(1)\r\n    let minutes = Math.floor( (duration / 60) % 60 )\r\n    let seconds = Math.floor(duration % 60 )\r\n    let totalTime = minutes + ' : ' + seconds\r\n\r\n    time.innerText = totalTime\r\n}\r\n\r\nfunction progressUpdate() {\r\n    progressFilled.style.flexBasis = (video.currentTime / video.duration * 100) + '%'\r\n    // progressFilled.style.flexBasis = `${percent}%`\r\n}\r\n\r\nfunction scrub(e) {\r\n    video.currentTime = (e.offsetX / progress.offsetWidth) * video.duration\r\n}\r\n\r\nfunction skip() {\r\n    video.currentTime += parseFloat(this.dataset.skip)\r\n  \r\n  }\r\n\r\n// Event listeners\r\ndocument.addEventListener('keydown', function(e) {\r\n  e.keyCode === 32 && togglePlay()\r\n})\r\n\r\n\r\nvideo.addEventListener('click', togglePlay)\r\nvideo.addEventListener('play', updateButton)\r\nvideo.addEventListener('pause', updateButton)\r\nvideo.addEventListener('timeupdate', progressUpdate)\r\nvideo.addEventListener('timeupdate', videoTime)\r\nvideo.addEventListener('loadedmetadata', loadTime)\r\n// secondsUpdated\r\n// loadedmetadata\r\n\r\ntoggle.addEventListener('click', togglePlay)\r\nskippers.forEach(button => button.addEventListener('click', skip))\r\nranges.forEach(range => range.addEventListener('change', rangeUpdate))\r\nranges.forEach(range => range.addEventListener('mousemove', rangeUpdate))\r\n\r\nlet mousedown = false;\r\nprogress.addEventListener('click', scrub)\r\nprogress.addEventListener('mousemove', (e) => mousedown && scrub(e))\r\nprogress.addEventListener('mousedown', () => mousedown = true)\r\nprogress.addEventListener('mouseup', () => mousedown = false)\r\n\r\n"]}